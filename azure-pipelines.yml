trigger:
- main  # or your default branch

pool:
  vmImage: 'windows-latest'  # or windows-latest if you're using Windows agents

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.x'  # use the correct .NET version for your project
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Step 1: Restore dependencies for both ClassLibrary1 and InsuranceServiceTests
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: |
      **/ClassLibrary1/ClassLibrary1.csproj
      **/InsuranceServiceTests/InsuranceServiceTests.csproj

# Step 2: Build both projects (ClassLibrary1 and InsuranceServiceTests)
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: |
      **/ClassLibrary1/ClassLibrary1.csproj
      **/InsuranceServiceTests/InsuranceServiceTests.csproj

# Step 3: Run NUnit tests in the InsuranceServiceTests project
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/InsuranceServiceTests/InsuranceServiceTests.csproj'
    arguments: '--configuration Release --logger "trx"'

# (Optional) Step 4: Publish test results to Azure DevOps
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: '**/TestResults/**/*.xml'
    failTaskOnFailedTests: true
